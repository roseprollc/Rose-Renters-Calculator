"use strict";(()=>{var e={};e.id=629,e.ids=[629],e.modules={38013:e=>{e.exports=require("mongodb")},72934:e=>{e.exports=require("next/dist/client/components/action-async-storage.external.js")},54580:e=>{e.exports=require("next/dist/client/components/request-async-storage.external.js")},45869:e=>{e.exports=require("next/dist/client/components/static-generation-async-storage.external.js")},30517:e=>{e.exports=require("next/dist/compiled/next-server/app-route.runtime.prod.js")},39491:e=>{e.exports=require("assert")},14300:e=>{e.exports=require("buffer")},6113:e=>{e.exports=require("crypto")},82361:e=>{e.exports=require("events")},13685:e=>{e.exports=require("http")},95687:e=>{e.exports=require("https")},63477:e=>{e.exports=require("querystring")},57310:e=>{e.exports=require("url")},73837:e=>{e.exports=require("util")},59796:e=>{e.exports=require("zlib")},4513:(e,r,t)=>{t.r(r),t.d(r,{headerHooks:()=>g,originalPathname:()=>j,patchFetch:()=>x,requestAsyncStorage:()=>h,routeModule:()=>m,serverHooks:()=>v,staticGenerationAsyncStorage:()=>y,staticGenerationBailout:()=>b});var s={};t.r(s),t.d(s,{DELETE:()=>w,GET:()=>p,POST:()=>f});var i=t(95419),n=t(69108),o=t(99678),a=t(78070),u=t(81355),d=t(4118),l=t(23947),c=t(38013);async function p(e){try{let r=await (0,u.getServerSession)(d.authOptions);if(!r?.user?.email)return a.Z.json({error:"Unauthorized"},{status:401});let{searchParams:t}=new URL(e.url),s=t.get("analysisId");if(!s)return a.Z.json({error:"Analysis ID is required"},{status:400});let i=(await l.default).db(),n=await i.collection("analyses").findOne({_id:new c.ObjectId(s),userId:r.user.email});if(!n)return a.Z.json({error:"Analysis not found"},{status:404});return a.Z.json(n.versions||[])}catch(e){return console.error("Error fetching version history:",e),a.Z.json({error:"Failed to fetch version history"},{status:500})}}async function f(e){try{let r=await (0,u.getServerSession)(d.authOptions);if(!r?.user?.email)return a.Z.json({error:"Unauthorized"},{status:401});let{analysisId:t,version:s}=await e.json();if(!t||!s)return a.Z.json({error:"Analysis ID and version data are required"},{status:400});let i=(await l.default).db();if(!await i.collection("analyses").findOne({_id:new c.ObjectId(t),userId:r.user.email}))return a.Z.json({error:"Analysis not found"},{status:404});let n={id:new c.ObjectId().toString(),createdAt:new Date().toISOString(),data:s.data,notes:s.notes,aiInsights:s.aiInsights},o=await i.collection("analyses").updateOne({_id:new c.ObjectId(t)},{$push:{versions:n},$set:{updatedAt:new Date().toISOString()}});if(0===o.modifiedCount)return a.Z.json({error:"Failed to add version"},{status:500});return a.Z.json({success:!0,version:n})}catch(e){return console.error("Error adding version:",e),a.Z.json({error:"Failed to add version"},{status:500})}}async function w(e){try{let r=await (0,u.getServerSession)(d.authOptions);if(!r?.user?.email)return a.Z.json({error:"Unauthorized"},{status:401});if("pro"!==r.user.subscriptionTier&&"elite"!==r.user.subscriptionTier)return a.Z.json({error:"This feature requires a Pro or Elite subscription"},{status:403});let{analysisId:t,versionId:s}=await e.json();if(!t||!s)return a.Z.json({error:"Analysis ID and version ID are required"},{status:400});let i=(await l.default).db(),n=await i.collection("analyses").findOne({_id:new c.ObjectId(t),userId:r.user.email});if(!n)return a.Z.json({error:"Analysis not found"},{status:404});let o=n.versions?.find(e=>e.id===s);if(!o)return a.Z.json({error:"Version not found"},{status:404});let p=await i.collection("analyses").updateOne({_id:new c.ObjectId(t)},{$set:{...o.data,updatedAt:new Date().toISOString()}});if(0===p.modifiedCount)return a.Z.json({error:"Failed to restore version"},{status:500});return a.Z.json({success:!0})}catch(e){return console.error("Error restoring version:",e),a.Z.json({error:"Failed to restore version"},{status:500})}}let m=new i.AppRouteRouteModule({definition:{kind:n.x.APP_ROUTE,page:"/api/analyses/version/route",pathname:"/api/analyses/version",filename:"route",bundlePath:"app/api/analyses/version/route"},resolvedPagePath:"/Users/wolf/bnb-calc-clone/app/api/analyses/version/route.ts",nextConfigOutput:"standalone",userland:s}),{requestAsyncStorage:h,staticGenerationAsyncStorage:y,serverHooks:v,headerHooks:g,staticGenerationBailout:b}=m,j="/api/analyses/version/route";function x(){return(0,o.patchFetch)({serverHooks:v,staticGenerationAsyncStorage:y})}},4118:(e,r,t)=>{t.r(r),t.d(r,{GET:()=>c,POST:()=>c,authOptions:()=>l});var s=t(81355),i=t.n(s),n=t(10375),o=t(86485),a=t(6521),u=t.n(a),d=t(40489);let l={providers:[(0,n.Z)({clientId:process.env.GOOGLE_CLIENT_ID,clientSecret:process.env.GOOGLE_CLIENT_SECRET}),(0,o.Z)({id:"credentials",name:"Credentials",credentials:{email:{label:"Email",type:"email"},password:{label:"Password",type:"password"},mode:{label:"Mode",type:"text"}},async authorize(e){if(!e?.email||!e?.password)throw Error("Missing credentials");let{email:r,password:t,mode:s}=e;if("demo@example.com"===r&&"demo123"===t)return{id:"demo",email:"demo@example.com",name:"Demo User",subscriptionTier:"free"};if("signup"===s){if(await d._.user.findUnique({where:{email:r}}))throw Error("User already exists");let e=await u().hash(t,10),s=await d._.user.create({data:{email:r,password:e,subscriptionTier:"free"}});return{id:s.id,email:s.email,subscriptionTier:s.subscriptionTier}}let i=await d._.user.findUnique({where:{email:r}});if(!i)throw Error("No user found with this email");if(!await u().compare(t,i.password))throw Error("Invalid password");return{id:i.id,email:i.email,subscriptionTier:i.subscriptionTier}}})],session:{strategy:"jwt",maxAge:2592e3},pages:{signIn:"/login",error:"/login"},callbacks:{jwt:async({token:e,user:r})=>(r&&(e.id=r.id,e.subscriptionTier=r.subscriptionTier||"free"),e),session:async({session:e,token:r})=>(e.user&&(e.user.id=r.id,e.user.subscriptionTier=r.subscriptionTier),e)}},c=i()(l)},23947:(e,r,t)=>{let s;t.d(r,{d1:()=>o,xd:()=>s});var i=t(38013);if(!process.env.MONGODB_URI)throw Error("Please add your Mongo URI to .env.local");let n=process.env.MONGODB_URI;function o(e){try{return new i.ObjectId(e)}catch(e){throw Error("Invalid ID format")}}s=new i.MongoClient(n,{}).connect()},40489:(e,r,t)=>{t.d(r,{_:()=>i});let s=require("@prisma/client"),i=globalThis.prisma??new s.PrismaClient}};var r=require("../../../../webpack-runtime.js");r.C(e);var t=e=>r(r.s=e),s=r.X(0,[1638,6206,7439,3561],()=>t(4513));module.exports=s})();
"use strict";(()=>{var e={};e.id=9660,e.ids=[9660],e.modules={53524:e=>{e.exports=require("@prisma/client")},38013:e=>{e.exports=require("mongodb")},72934:e=>{e.exports=require("next/dist/client/components/action-async-storage.external.js")},54580:e=>{e.exports=require("next/dist/client/components/request-async-storage.external.js")},45869:e=>{e.exports=require("next/dist/client/components/static-generation-async-storage.external.js")},30517:e=>{e.exports=require("next/dist/compiled/next-server/app-route.runtime.prod.js")},39491:e=>{e.exports=require("assert")},14300:e=>{e.exports=require("buffer")},6113:e=>{e.exports=require("crypto")},82361:e=>{e.exports=require("events")},57147:e=>{e.exports=require("fs")},13685:e=>{e.exports=require("http")},95687:e=>{e.exports=require("https")},87561:e=>{e.exports=require("node:fs")},84492:e=>{e.exports=require("node:stream")},72477:e=>{e.exports=require("node:stream/web")},71017:e=>{e.exports=require("path")},85477:e=>{e.exports=require("punycode")},63477:e=>{e.exports=require("querystring")},12781:e=>{e.exports=require("stream")},57310:e=>{e.exports=require("url")},73837:e=>{e.exports=require("util")},71267:e=>{e.exports=require("worker_threads")},59796:e=>{e.exports=require("zlib")},24704:(e,r,t)=>{t.r(r),t.d(r,{headerHooks:()=>y,originalPathname:()=>w,patchFetch:()=>x,requestAsyncStorage:()=>h,routeModule:()=>d,serverHooks:()=>v,staticGenerationAsyncStorage:()=>g,staticGenerationBailout:()=>f});var s={};t.r(s),t.d(s,{POST:()=>m});var i=t(95419),a=t(69108),o=t(99678),n=t(78070),p=t(81355),l=t(76163),u=t(23947);let c=new(t(22081)).Pp({apiKey:process.env.OPENAI_API_KEY});async function m(e){try{let r=await (0,p.getServerSession)(l.L);if(!r?.user?.email)return n.Z.json({error:"Unauthorized"},{status:401});let{analysisId:t,type:s,data:i}=await e.json(),a=(await u.xd).db();if(!await a.collection("analyses").findOne({id:t,userId:r.user.email}))return n.Z.json({error:"Analysis not found"},{status:404});let o=function(e,r){switch(e){case"mortgage":return`Analyze this mortgage investment:
        Purchase Price: $${r.propertyPrice}
        Monthly Payment: $${r.monthlyPayment}
        ROI: ${r.roi}%
        Suggest specific improvements to increase ROI and cash flow.`;case"rental":return`Analyze this rental property:
        Purchase Price: $${r.propertyPrice}
        Monthly Cash Flow: $${r.monthlyCashFlow}
        Cap Rate: ${r.capRate}%
        Suggest specific improvements to increase cash flow and cap rate.`;case"wholesale":return`Analyze this wholesale deal:
        ARV: $${r.arv}
        Potential Profit: $${r.potentialProfit}
        Total Investment: $${r.totalInvestment}
        Suggest specific improvements to increase profit margin.`;case"airbnb":return`Analyze this Airbnb property:
        Monthly Revenue: $${r.monthlyRevenue}
        Monthly Profit: $${r.monthlyProfit}
        Nightly Rate: $${r.nightlyRate}
        Suggest specific improvements to increase revenue and occupancy.`;default:return"Analyze this investment and suggest specific improvements."}}(s,i),m=((await c.chat.completions.create({model:"gpt-4",messages:[{role:"system",content:"You are a real estate investment advisor. Provide specific, actionable suggestions to improve the investment's performance."},{role:"user",content:o}],temperature:.7,max_tokens:500})).choices[0].message.content||"").split("\n").filter(e=>e.trim()).filter(e=>/^[\d\.\-\*]/.test(e.trim())).map(e=>e.replace(/^[\d\.\-\*]\s*/,"").trim()).filter(Boolean);return await a.collection("analyses").updateOne({id:t},{$set:{autoImproveSuggestions:m.map((e,r)=>({id:`${t}-${r}`,suggestion:e,impact:`Potential ${Math.floor(10*Math.random()+5)}% improvement`,createdAt:new Date().toISOString()}))}}),n.Z.json({suggestions:m})}catch(e){return console.error("Auto-improve error:",e),n.Z.json({error:"Failed to generate suggestions"},{status:500})}}let d=new i.AppRouteRouteModule({definition:{kind:a.x.APP_ROUTE,page:"/api/ai/autoImprove/route",pathname:"/api/ai/autoImprove",filename:"route",bundlePath:"app/api/ai/autoImprove/route"},resolvedPagePath:"/Users/wolf/bnb-calc-clone/app/api/ai/autoImprove/route.ts",nextConfigOutput:"standalone",userland:s}),{requestAsyncStorage:h,staticGenerationAsyncStorage:g,serverHooks:v,headerHooks:y,staticGenerationBailout:f}=d,w="/api/ai/autoImprove/route";function x(){return(0,o.patchFetch)({serverHooks:v,staticGenerationAsyncStorage:g})}},76163:(e,r,t)=>{t.d(r,{L:()=>u});var s=t(54896),i=t(86485),a=t(10375),o=t(53524);let n=globalThis.prisma??new o.PrismaClient({log:["query"]});var p=t(6521),l=t.n(p);let u={adapter:(0,s.N)(n),providers:[(0,a.Z)({clientId:process.env.GOOGLE_CLIENT_ID,clientSecret:process.env.GOOGLE_CLIENT_SECRET}),(0,i.Z)({name:"credentials",credentials:{email:{label:"Email",type:"email"},password:{label:"Password",type:"password"},mode:{label:"Mode",type:"text"}},async authorize(e){if(!e?.email||!e?.password)throw Error("Missing credentials");let r=await n.user.findUnique({where:{email:e.email}});if("signup"===e.mode){if(r)throw Error("User already exists");let t=await l().hash(e.password,10),s=await n.user.create({data:{email:e.email,password:t,subscriptionTier:"free"}});return{id:s.id,email:s.email,name:s.name,subscriptionTier:s.subscriptionTier}}if(!r||!await l().compare(e.password,r.password||""))throw Error("Invalid credentials");return{id:r.id,email:r.email,name:r.name,subscriptionTier:r.subscriptionTier}}})],session:{strategy:"jwt"},callbacks:{jwt:async({token:e,user:r})=>(r&&(e.id=r.id,e.subscriptionTier=r.subscriptionTier),e),session:async({session:e,token:r})=>(e.user&&r&&(e.user.id=r.id,e.user.subscriptionTier=r.subscriptionTier),e)},pages:{signIn:"/login"}}},23947:(e,r,t)=>{let s;t.d(r,{d1:()=>o,xd:()=>s});var i=t(38013);if(!process.env.MONGODB_URI)throw Error("Please add your Mongo URI to .env.local");let a=process.env.MONGODB_URI;function o(e){try{return new i.ObjectId(e)}catch(e){throw Error("Invalid ID format")}}s=new i.MongoClient(a,{}).connect()}};var r=require("../../../../webpack-runtime.js");r.C(e);var t=e=>r(r.s=e),s=r.X(0,[1638,6206,4496,976],()=>t(24704));module.exports=s})();